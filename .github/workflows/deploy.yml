name: Build and Deploy

on:
    workflow_call:
        inputs:
            environment:
                description: 'Deployment environment (staging/prod)'
                required: true
                type: string
            image_tag:
                description: 'Docker image tag'
                required: true
                type: string
            compose_services:
                description: 'Docker Compose services to deploy'
                required: true
                type: string
        secrets:
            CR_PAT:
                required: true
            VPS_HOST:
                required: true
            VPS_USER:
                required: true
            VPS_SSH_KEY:
                required: true
            VPS_PORT:
                required: true
            VAULT_PASSWORD:
                required: true

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/mrtgm/mental-

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      ansible-changed: ${{ steps.changes.outputs.ansible }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          frontend:
            - 'frontend/**'
          backend:
            - 'backend/**'
          ansible:
            - 'ansible/**'
            - 'compose.yml'
            - '.env'

  build-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    permissions: { contents: read, packages: write }
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Build + push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ env.IMAGE_PREFIX }}frontend:${{ inputs.image_tag }}
          ${{ env.IMAGE_PREFIX }}frontend:${{ inputs.image_tag }}-${{ github.sha }}
        cache-from: type=gha,scope=frontend-${{ inputs.image_tag }}
        cache-to: type=gha,mode=max,scope=frontend-${{ inputs.image_tag }}
        platforms: linux/amd64

  build-backend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    permissions: { contents: read, packages: write }
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Build + push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.IMAGE_PREFIX }}backend:${{ inputs.image_tag }}
          ${{ env.IMAGE_PREFIX }}backend:${{ inputs.image_tag }}-${{ github.sha }}
        cache-from: type=gha,scope=backend-${{ inputs.image_tag }}
        cache-to: type=gha,mode=max,scope=backend-${{ inputs.image_tag }}
        platforms: linux/amd64

  deploy:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-frontend, build-backend]
    if: |
      always() && (
        needs.detect-changes.outputs.ansible-changed == 'true' ||
        (
          !(needs.build-frontend.result == 'skipped' && needs.build-backend.result == 'skipped') &&
          needs.build-frontend.result != 'failure' &&
          needs.build-backend.result != 'failure'
        )
      )
    steps:
    - uses: actions/checkout@v4

    - name: Setup unified SSH configuration
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

    - name: Apply Ansible Playbook
      if: needs.detect-changes.outputs.ansible-changed == 'true'
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: ansible/playbooks/deploy-stack.yml
        key: ${{ secrets.VPS_SSH_KEY }}
        vault_password: ${{ secrets.VAULT_PASSWORD }}
        inventory: |
          [vps]
          ${{ secrets.VPS_HOST }} ansible_user=${{ secrets.VPS_USER }} ansible_port=${{ secrets.VPS_PORT }} ansible_become=true
        options: |
          --extra-vars "@ansible/inventory/group_vars/vps.yml"

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1
      with:
        host:   ${{ secrets.VPS_HOST }}
        username:   ${{ secrets.VPS_USER }}
        key:    ${{ secrets.VPS_SSH_KEY }}
        port:   ${{ secrets.VPS_PORT }}
        script: |
          cd /opt/mental
          docker compose pull ${{ inputs.compose_services }}
          docker compose up -d --wait --no-deps ${{ inputs.compose_services }}
          docker image prune -af --filter "until=240h"
